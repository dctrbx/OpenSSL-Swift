{"Typealiases.html#/s:7OpenSSL6Digesta":{"name":"Digest","abstract":"<p>Typealias for Digest</p>"},"Structs/OpenSSLError.html#/s:7OpenSSL0A8SSLErrorV4nameSSvp":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"OpenSSLError"},"Structs/OpenSSLError.html#/s:7OpenSSL0A8SSLErrorV4infoSDyS2SGvp":{"name":"info","abstract":"<p>Undocumented</p>","parent_name":"OpenSSLError"},"Structs/OpenSSLError.html#/s:7OpenSSL0A8SSLErrorV4nameACSS_tcfc":{"name":"init(name:)","abstract":"<p>Undocumented</p>","parent_name":"OpenSSLError"},"Structs/OpenSSLError.html":{"name":"OpenSSLError","abstract":"<p>Undocumented</p>"},"Protocols/ECSignature.html#/s:7OpenSSL11ECSignatureP17rawRepresentationx10Foundation4DataV_tKcfc":{"name":"init(rawRepresentation:)","abstract":"<p>Initialize from rawRepresentation</p>","parent_name":"ECSignature"},"Protocols/ECSignature.html#/s:7OpenSSL11ECSignatureP17derRepresentationx10Foundation4DataV_tKcfc":{"name":"init(derRepresentation:)","abstract":"<p>Initialize from DER encoded data</p>","parent_name":"ECSignature"},"Protocols/ECSignature.html#/s:7OpenSSL11ECSignatureP17derRepresentation10Foundation4DataVvp":{"name":"derRepresentation","abstract":"<p>ASN.1 DER encoded signature</p>","parent_name":"ECSignature"},"Protocols/ECSignature.html#/s:7OpenSSL11ECSignatureP17rawRepresentation10Foundation4DataVvp":{"name":"rawRepresentation","abstract":"<p>Raw signature data</p>","parent_name":"ECSignature"},"Protocols/SignatureVerifier.html#/s:7OpenSSL17SignatureVerifierP0C0Qa":{"name":"Signature","abstract":"<p>The signature type</p>","parent_name":"SignatureVerifier"},"Protocols/SignatureVerifier.html#/s:7OpenSSL17SignatureVerifierP6verify9signature7messageSb0C0Qz_10Foundation4DataVtKF":{"name":"verify(signature:message:)","abstract":"<p>Verify a signature for the given message</p>","parent_name":"SignatureVerifier"},"Protocols/DigestSigner.html#/s:7OpenSSL12DigestSignerP9SignatureQa":{"name":"Signature","abstract":"<p>Signature type</p>","parent_name":"DigestSigner"},"Protocols/DigestSigner.html#/s:7OpenSSL12DigestSignerP4sign6digest9SignatureQz10Foundation4DataV_tKF":{"name":"sign(digest:)","abstract":"<p>Sign a digest</p>","parent_name":"DigestSigner"},"Protocols/Signer.html#/s:7OpenSSL6SignerP9SignatureQa":{"name":"Signature","abstract":"<p>Type signature type</p>","parent_name":"Signer"},"Protocols/Signer.html#/s:7OpenSSL6SignerP4sign7message9SignatureQz10Foundation4DataV_tKF":{"name":"sign(message:)","abstract":"<p>Sign a message</p>","parent_name":"Signer"},"Protocols/PACE.html#/s:7OpenSSL4PACEP10PrivateKeyQa":{"name":"PrivateKey","abstract":"<p>The associated own key PrivateKey type</p>","parent_name":"PACE"},"Protocols/PACE.html#/s:7OpenSSL4PACEP12paceMapNonce5nonce8peerKey19PublicKeyQz_07PrivateK0Qzt10Foundation4DataV_AHtKF":{"name":"paceMapNonce(nonce:peerKey1:)","abstract":"<p>The PACE protocol sets up a SecureMessaging channel with strong session keys based on a shared password,","parent_name":"PACE"},"Protocols/DiffieHellman.html#/s:7OpenSSL13DiffieHellmanP9PublicKeyQa":{"name":"PublicKey","abstract":"<p>The associated PublicKey type</p>","parent_name":"DiffieHellman"},"Protocols/DiffieHellman.html#/s:7OpenSSL13DiffieHellmanP12sharedSecret4with10Foundation4DataV9PublicKeyQz_tKF":{"name":"sharedSecret(with:)","abstract":"<p>Compute a shared secret using the given public key</p>","parent_name":"DiffieHellman"},"Protocols/ECCurve.html#/s:7OpenSSL7ECCurveP4nameSSvpZ":{"name":"name","abstract":"<p>Name of the ECCurve (group) in OpenSSL (e.g. &ldquo;brainpoolP256r1&rdquo;, &ldquo;P-256&rdquo;, etc &hellip;)</p>","parent_name":"ECCurve"},"Protocols/ECCurve.html#/s:7OpenSSL7ECCurveP5groupAA0A10SSLECGroupCvpZ":{"name":"group","abstract":"<p>Elliptic-Curve group information</p>","parent_name":"ECCurve"},"Protocols/ECPublicKey.html#/s:7OpenSSL11ECPublicKeyP7compactx10Foundation4DataV_tKcfc":{"name":"init(compact:)","abstract":"<p>Initialize a public key from compressed representation</p>","parent_name":"ECPublicKey"},"Protocols/ECPublicKey.html#/s:7OpenSSL11ECPublicKeyP4x962x10Foundation4DataV_tKcfc":{"name":"init(x962:)","abstract":"<p>Initialize a public key For an elliptic curve public key,","parent_name":"ECPublicKey"},"Protocols/ECPublicKey.html#/s:7OpenSSL11ECPublicKeyP8rawValue10Foundation4DataVyKF":{"name":"rawValue()","abstract":"<p>The raw EC Public Key representation in Octet-String</p>","parent_name":"ECPublicKey"},"Protocols/ECPublicKey.html#/s:7OpenSSL11ECPublicKeyP9x962Value10Foundation4DataVyKF":{"name":"x962Value()","abstract":"<p>The raw EC Public Key representation using ANSI X9.62 standard [04 || X || Y]. (uncompressed)</p>","parent_name":"ECPublicKey"},"Protocols/ECPublicKey.html#/s:7OpenSSL11ECPublicKeyP12compactValue10Foundation4DataVyKF":{"name":"compactValue()","abstract":"<p>The raw EC Public Key compressed representation</p>","parent_name":"ECPublicKey"},"Protocols/ECPrivateKey.html#/s:7OpenSSL12ECPrivateKeyP06PublicD0Qa":{"name":"PublicKey","abstract":"<p>The associated public key type</p>","parent_name":"ECPrivateKey"},"Protocols/ECPrivateKey.html#/s:7OpenSSL12ECPrivateKeyP4x962x10Foundation4DataV_tKcfc":{"name":"init(x962:)","abstract":"<p>Initialize a private key for an elliptic curve public key,","parent_name":"ECPrivateKey"},"Protocols/ECPrivateKey.html#/s:7OpenSSL12ECPrivateKeyP3rawx10Foundation4DataV_tKcfc":{"name":"init(raw:)","abstract":"<p>Initialize a private key for an elliptic curve public key,","parent_name":"ECPrivateKey"},"Protocols/ECPrivateKey.html#/s:7OpenSSL12ECPrivateKeyP06publicD006PublicD0Qzvp":{"name":"publicKey","abstract":"<p>The associated public key</p>","parent_name":"ECPrivateKey"},"Protocols/ECPrivateKey.html#/s:7OpenSSL12ECPrivateKeyP08generateD0xyKFZ":{"name":"generateKey()","abstract":"<p>Generate a key</p>","parent_name":"ECPrivateKey"},"Protocols/ECPrivateKey.html":{"name":"ECPrivateKey","abstract":"<p>Elliptic Curve private key</p>"},"Protocols/ECPublicKey.html":{"name":"ECPublicKey","abstract":"<p>Elliptic Curve public key</p>"},"Protocols/ECCurve.html":{"name":"ECCurve","abstract":"<p>Elliptic-Curve protocol</p>"},"Protocols/DiffieHellman.html":{"name":"DiffieHellman","abstract":"<p>DiffieHellman sharedSecret protocol</p>"},"Protocols/PACE.html":{"name":"PACE","abstract":"<p>PACE (Password Authenticated Connection Establishment) protocol</p>"},"Protocols/Signer.html":{"name":"Signer","abstract":"<p>Protocol for message signer</p>"},"Protocols/DigestSigner.html":{"name":"DigestSigner","abstract":"<p>Protocol for digest signers</p>"},"Protocols/SignatureVerifier.html":{"name":"SignatureVerifier","abstract":"<p>Protocol for message verifiers</p>"},"Protocols/ECSignature.html":{"name":"ECSignature","abstract":"<p>Protocol for EC Signature types</p>"},"Enums/CMAC.html#/s:7OpenSSL4CMACO17aes128cbc_bySteps3key4data10Foundation4DataVAI_AItKFZ":{"name":"aes128cbc_bySteps(key:data:)","abstract":"<p>Stateless, one-shot AES 128 CBC CMAC function","parent_name":"CMAC"},"Enums/CMAC.html#/s:7OpenSSL4CMACO9aes128cbc3key4data10Foundation4DataVAI_AItKFZ":{"name":"aes128cbc(key:data:)","abstract":"<p>Stateless, one-shot AES 128 CBC CMAC function","parent_name":"CMAC"},"Enums/Hash/SHA256.html#/s:7OpenSSL4HashO6SHA256O4hash4data10Foundation4DataVAJ_tFZ":{"name":"hash(data:)","abstract":"<p>Hash the given data with SHA-256</p>","parent_name":"SHA256"},"Enums/Hash/SHA256.html#/s:7OpenSSL4HashO6SHA256O4hash6string10Foundation4DataVSS_tFZ":{"name":"hash(string:)","abstract":"<p>Hash the given string with SHA-256</p>","parent_name":"SHA256"},"Enums/Hash/SHA256.html":{"name":"SHA256","abstract":"<p>SHA-256 Hash</p>","parent_name":"Hash"},"Enums/BrainpoolP256r1/Verify/Signature.html#/s:7OpenSSL11ECSignatureP17rawRepresentationx10Foundation4DataV_tKcfc":{"name":"init(rawRepresentation:)","parent_name":"Signature"},"Enums/BrainpoolP256r1/Verify/Signature.html#/s:7OpenSSL11ECSignatureP17derRepresentationx10Foundation4DataV_tKcfc":{"name":"init(derRepresentation:)","parent_name":"Signature"},"Enums/BrainpoolP256r1/Verify/Signature.html#/s:7OpenSSL11ECSignatureP17derRepresentation10Foundation4DataVvp":{"name":"derRepresentation","parent_name":"Signature"},"Enums/BrainpoolP256r1/Verify/Signature.html#/s:7OpenSSL11ECSignatureP17rawRepresentation10Foundation4DataVvp":{"name":"rawRepresentation","parent_name":"Signature"},"Enums/BrainpoolP256r1/Verify/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP3rawx10Foundation4DataV_tKcfc":{"name":"init(raw:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/Verify/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP4x962x10Foundation4DataV_tKcfc":{"name":"init(x962:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/Verify/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP06publicD006PublicD0Qzvp":{"name":"publicKey","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/Verify/PrivateKey.html#/s:7OpenSSL6SignerP4sign7message9SignatureQz10Foundation4DataV_tKF":{"name":"sign(message:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/Verify/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP08generateD0xyKFZ":{"name":"generateKey()","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html#/s:7OpenSSL11ECPublicKeyP7compactx10Foundation4DataV_tKcfc":{"name":"init(compact:)","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html#/s:7OpenSSL11ECPublicKeyP4x962x10Foundation4DataV_tKcfc":{"name":"init(x962:)","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html#/s:7OpenSSL11ECPublicKeyP8rawValue10Foundation4DataVyKF":{"name":"rawValue()","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html#/s:7OpenSSL11ECPublicKeyP9x962Value10Foundation4DataVyKF":{"name":"x962Value()","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html#/s:7OpenSSL11ECPublicKeyP12compactValue10Foundation4DataVyKF":{"name":"compactValue()","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html#/s:7OpenSSL17SignatureVerifierP6verify9signature7messageSb0C0Qz_10Foundation4DataVtKF":{"name":"verify(signature:message:)","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/Verify/PublicKey.html":{"name":"PublicKey","abstract":"<p>The BrainpoolP256r1 Public Key for ECDSA verification</p>","parent_name":"Verify"},"Enums/BrainpoolP256r1/Verify/PrivateKey.html":{"name":"PrivateKey","abstract":"<p>The BrainpoolP256r1 Private Key for ECDSA signing</p>","parent_name":"Verify"},"Enums/BrainpoolP256r1/Verify/Signature.html":{"name":"Signature","abstract":"<p>Undocumented</p>","parent_name":"Verify"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP3rawx10Foundation4DataV_tKcfc":{"name":"init(raw:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP4x962x10Foundation4DataV_tKcfc":{"name":"init(x962:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP06publicD006PublicD0Qzvp":{"name":"publicKey","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html#/s:7OpenSSL13DiffieHellmanP12sharedSecret4with10Foundation4DataV9PublicKeyQz_tKF":{"name":"sharedSecret(with:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html#/s:7OpenSSL4PACEP12paceMapNonce5nonce8peerKey19PublicKeyQz_07PrivateK0Qzt10Foundation4DataV_AHtKF":{"name":"paceMapNonce(nonce:peerKey1:)","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html#/s:7OpenSSL12ECPrivateKeyP08generateD0xyKFZ":{"name":"generateKey()","parent_name":"PrivateKey"},"Enums/BrainpoolP256r1/KeyExchange/PublicKey.html#/s:7OpenSSL11ECPublicKeyP7compactx10Foundation4DataV_tKcfc":{"name":"init(compact:)","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/KeyExchange/PublicKey.html#/s:7OpenSSL11ECPublicKeyP4x962x10Foundation4DataV_tKcfc":{"name":"init(x962:)","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/KeyExchange/PublicKey.html#/s:7OpenSSL11ECPublicKeyP8rawValue10Foundation4DataVyKF":{"name":"rawValue()","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/KeyExchange/PublicKey.html#/s:7OpenSSL11ECPublicKeyP9x962Value10Foundation4DataVyKF":{"name":"x962Value()","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/KeyExchange/PublicKey.html#/s:7OpenSSL11ECPublicKeyP12compactValue10Foundation4DataVyKF":{"name":"compactValue()","parent_name":"PublicKey"},"Enums/BrainpoolP256r1/KeyExchange/PublicKey.html":{"name":"PublicKey","abstract":"<p>The BrainpoolP256r1 Public Key for ECDH KeyExchange</p>","parent_name":"KeyExchange"},"Enums/BrainpoolP256r1/KeyExchange/PrivateKey.html":{"name":"PrivateKey","abstract":"<p>The BrainpoolP256r1 Private Key for ECDH KeyExchange</p>","parent_name":"KeyExchange"},"Enums/BrainpoolP256r1/KeyExchange.html#/s:7OpenSSL15BrainpoolP256r1O11KeyExchangeO08generateE0AE07PrivateE0VyKFZ":{"name":"generateKey()","abstract":"<p>Generate a key</p>","parent_name":"KeyExchange"},"Enums/BrainpoolP256r1/KeyExchange.html":{"name":"KeyExchange","abstract":"<p>KeyExchange types for the BrainpoolP256r1 Elliptic Curve</p>","parent_name":"BrainpoolP256r1"},"Enums/BrainpoolP256r1/Verify.html":{"name":"Verify","abstract":"<p>Verify signatures for the BrainpoolP256r1 Elliptic Curve</p>","parent_name":"BrainpoolP256r1"},"Enums/BrainpoolP256r1.html":{"name":"BrainpoolP256r1","abstract":"<p>The BrainpoolP256r1 Elliptic Curve.</p>"},"Enums/Hash.html":{"name":"Hash","abstract":"<p>Hashing package</p>"},"Enums/CMAC.html":{"name":"CMAC","abstract":"<p>CMAC calculation package</p>"},"Classes/OpenSSLECGroup/Name.html#/s:7OpenSSL0A10SSLECGroupC4NameO15brainpoolP256r1yA2EmF":{"name":"brainpoolP256r1","abstract":"<p>BrainpoolP256r1 as defined in <a href=\"https://tools.ietf.org/html/rfc5639\">https://tools.ietf.org/html/rfc5639</a></p>","parent_name":"Name"},"Classes/OpenSSLECGroup.html#/s:7OpenSSL0A10SSLECGroupC5curveA2C4NameO_tKcfc":{"name":"init(curve:)","abstract":"<p>Initialize a Curve by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/OpenSSLECGroup/Name.html\">OpenSSLECGroup.Name</a></code></p>","parent_name":"OpenSSLECGroup"},"Classes/OpenSSLECGroup/Name.html":{"name":"Name","abstract":"<p>Curves</p>","parent_name":"OpenSSLECGroup"},"Classes/X509/SignatureAlgorithm.html#/s:7OpenSSL4X509C18SignatureAlgorithmO15ecdsaWithSHA256yA2EmF":{"name":"ecdsaWithSHA256","abstract":"<p>ECDSA with SHA 256</p>","parent_name":"SignatureAlgorithm"},"Classes/X509/SignatureAlgorithm.html#/s:7OpenSSL4X509C18SignatureAlgorithmO11unsupportedyA2EmF":{"name":"unsupported","abstract":"<p>Not supported by this class</p>","parent_name":"SignatureAlgorithm"},"Classes/X509/SignatureAlgorithm.html":{"name":"SignatureAlgorithm","abstract":"<p>Corresponding signature algorithms of <code>X.509</code> certificates.</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C3derAC10Foundation4DataV_tKcfc":{"name":"init(der:)","abstract":"<p>Initialize a X509 certificate from DER representation</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C3pemAC10Foundation4DataV_tKcfc":{"name":"init(pem:)","abstract":"<p>Initialize a X509 certificate from PEM encoded data (contains <em>&mdash;&ndash;BEGIN CERTIFICATE&mdash;&ndash;</em>)</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C8derBytes10Foundation4DataVSgvp":{"name":"derBytes","abstract":"<p>Return the raw bytes of the DER representation</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C12serialNumberSSyKF":{"name":"serialNumber()","abstract":"<p>Return the certificates serial number as decimal <code>String</code></p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C18signatureAlgorithmAC09SignatureE0OyF":{"name":"signatureAlgorithm()","abstract":"<p>Return the the signature algorithm used when validating signatures with this certificate</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C29issuerX500PrincipalDEREncoded10Foundation4DataVSgyF":{"name":"issuerX500PrincipalDEREncoded()","abstract":"<p>Return the certificate&rsquo;s issuer X500 Principal representation as DER encoded <code>Data</code>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C30subjectX500PrincipalDEREncoded10Foundation4DataVSgyF":{"name":"subjectX500PrincipalDEREncoded()","abstract":"<p>Return the certificate&rsquo;s subject X500 Principal representation as DER encoded <code>Data</code>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C13issuerOneLineSSyKF":{"name":"issuerOneLine()","abstract":"<p>Convenience function that return the certificate&rsquo;s issuer in one line</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C14subjectOneLineSSyKF":{"name":"subjectOneLine()","abstract":"<p>Convenience function that return the certificate&rsquo;s subject in one line</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C9notBefore10Foundation4DateVyKF":{"name":"notBefore()","abstract":"<p>Return the certificate&rsquo;s <code>notBefore</code> field</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C8notAfter10Foundation4DateVyKF":{"name":"notAfter()","abstract":"<p>Return the certificate&rsquo;s <code>notAfter</code> field.</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C20isValidCaCertificateSbvp":{"name":"isValidCaCertificate","abstract":"<p>Check whether the certificate is a valid CA certificate</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C6issuedySbACF":{"name":"issued(_:)","abstract":"<p>Check whether another certificate is issued by the subject of <code>self</code>.","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C17sha256Fingerprint10Foundation4DataVyKF":{"name":"sha256Fingerprint()","abstract":"<p>Compute the SHA256 fingerprint of the certificate</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C12validateWith10trustStoreSbx_tKSlRzAC7ElementRtzlF":{"name":"validateWith(trustStore:)","abstract":"<p>Validate the certificate with a trust store</p>","parent_name":"X509"},"Classes/X509.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C30brainpoolP256r1VerifyPublicKeyAA09BrainpoolE0O0F0O0gH0VSgyF":{"name":"brainpoolP256r1VerifyPublicKey()","abstract":"<p>Convenience function for parsing the certificate&rsquo;s BrainpoolP256r1 PublicKey for verification, if it exists</p>","parent_name":"X509"},"Classes/X509.html#/s:7OpenSSL4X509C032brainpoolP256r1KeyExchangePublicF0AA09BrainpoolE0O0fG0O0hF0VSgyF":{"name":"brainpoolP256r1KeyExchangePublicKey()","abstract":"<p>Convenience function for parsing the certificate&rsquo;s BrainpoolP256r1 PublicKey for key exchange, if it exists</p>","parent_name":"X509"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV8noInternAEvpZ":{"name":"noIntern","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV6noSigsAEvpZ":{"name":"noSigs","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV02noE0AEvpZ":{"name":"noVerify","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV10trustOtherAEvpZ":{"name":"trustOther","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV7noChainAEvpZ":{"name":"noChain","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV8noChecksAEvpZ":{"name":"noChecks","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/BasicVerifyOptions.html#/s:7OpenSSL12OCSPResponseC18BasicVerifyOptionsV10noExplicitAEvpZ":{"name":"noExplicit","abstract":"<p>Undocumented</p>","parent_name":"BasicVerifyOptions"},"Classes/OCSPResponse/CertStatus.html#/s:7OpenSSL12OCSPResponseC10CertStatusO4goodyA2EmF":{"name":"good","abstract":"<p>Undocumented</p>","parent_name":"CertStatus"},"Classes/OCSPResponse/CertStatus.html#/s:7OpenSSL12OCSPResponseC10CertStatusO7revokedyA2EmF":{"name":"revoked","abstract":"<p>Undocumented</p>","parent_name":"CertStatus"},"Classes/OCSPResponse/CertStatus.html#/s:7OpenSSL12OCSPResponseC10CertStatusO7unknownyA2EmF":{"name":"unknown","abstract":"<p>Undocumented</p>","parent_name":"CertStatus"},"Classes/OCSPResponse/CertStatus.html#/s:7OpenSSL12OCSPResponseC10CertStatusO33requestedCertificateNotInResponseyA2EmF":{"name":"requestedCertificateNotInResponse","abstract":"<p>Undocumented</p>","parent_name":"CertStatus"},"Classes/OCSPResponse/Status.html#/s:7OpenSSL12OCSPResponseC6StatusO10successfulyA2EmF":{"name":"successful","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Classes/OCSPResponse/Status.html#/s:7OpenSSL12OCSPResponseC6StatusO16malformedRequestyA2EmF":{"name":"malformedRequest","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Classes/OCSPResponse/Status.html#/s:7OpenSSL12OCSPResponseC6StatusO13internalErroryA2EmF":{"name":"internalError","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Classes/OCSPResponse/Status.html#/s:7OpenSSL12OCSPResponseC6StatusO8tryLateryA2EmF":{"name":"tryLater","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Classes/OCSPResponse/Status.html#/s:7OpenSSL12OCSPResponseC6StatusO11sigRequiredyA2EmF":{"name":"sigRequired","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Classes/OCSPResponse/Status.html#/s:7OpenSSL12OCSPResponseC6StatusO12unauthorizedyA2EmF":{"name":"unauthorized","abstract":"<p>Undocumented</p>","parent_name":"Status"},"Classes/OCSPResponse.html#/s:7OpenSSL12OCSPResponseC3derAC10Foundation4DataV_tKcfc":{"name":"init(der:)","abstract":"<p>Initialize a OCSP Response from DER representation</p>","parent_name":"OCSPResponse"},"Classes/OCSPResponse/Status.html":{"name":"Status","abstract":"<p>Undocumented</p>","parent_name":"OCSPResponse"},"Classes/OCSPResponse.html#/s:7OpenSSL12OCSPResponseC6statusAC6StatusOyF":{"name":"status()","abstract":"<p>Returns the response status value</p>","parent_name":"OCSPResponse"},"Classes/OCSPResponse.html#/s:7OpenSSL12OCSPResponseC10producedAt10Foundation4DateVyKF":{"name":"producedAt()","abstract":"<p>Extract the <em>producedAt</em> field from the basis response.</p>","parent_name":"OCSPResponse"},"Classes/OCSPResponse/CertStatus.html":{"name":"CertStatus","abstract":"<p>Undocumented</p>","parent_name":"OCSPResponse"},"Classes/OCSPResponse.html#/s:7OpenSSL12OCSPResponseC17certificateStatus3for6issuerAC04CertE0OAA4X509C_AJtKF":{"name":"certificateStatus(for:issuer:)","abstract":"<p>Search the OCSP response for a status information for a given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/X509.html\">X509</a></code> certificate.","parent_name":"OCSPResponse"},"Classes/OCSPResponse.html#/s:7OpenSSL12OCSPResponseC9getSignerAA4X509CSgyKF":{"name":"getSigner()","abstract":"<p>Attempts to retrieve the certificate that directly signed this response.</p>","parent_name":"OCSPResponse"},"Classes/OCSPResponse.html#/s:7OpenSSL12OCSPResponseC15basicVerifyWith12trustedStore7optionsSbx_AC05BasicE7OptionsVtKSlRzAA4X509C7ElementRtzlF":{"name":"basicVerifyWith(trustedStore:options:)","abstract":"<p>Checks that the basic response message is correctly signed and that the signer certificate can be validated.","parent_name":"OCSPResponse"},"Classes/OCSPResponse/BasicVerifyOptions.html":{"name":"BasicVerifyOptions","abstract":"<p>Flags for function <code>basicVerify()</code>.","parent_name":"OCSPResponse"},"Classes/CMSContentInfo.html#/s:7OpenSSL14CMSContentInfoC8derBytes10Foundation4DataVSgvp":{"name":"derBytes","abstract":"<p>Get the DER byte representation as <code>Data</code></p>","parent_name":"CMSContentInfo"},"Classes/CMSContentInfo.html#/s:7OpenSSL14CMSContentInfoC14encryptPartial4dataACXD10Foundation4DataV_tKFZ":{"name":"encryptPartial(data:)","abstract":"<p>Entry step for the <code>encryptPartial</code>, <code>addRecipients</code>, <code>final</code> (as in <code>init</code>, <code>update</code>, <code>final</code>) cycle.</p>","parent_name":"CMSContentInfo"},"Classes/CMSContentInfo.html#/s:7OpenSSL14CMSContentInfoC20addRecipientsRSAOnlyyySayAA4X509CGKF":{"name":"addRecipientsRSAOnly(_:)","abstract":"<p>Update step for the <code>encryptPartial</code>, <code>addRecipients</code>, <code>final</code> (as in <code>init</code>, <code>update</code>, <code>final</code>) cycle.</p>","parent_name":"CMSContentInfo"},"Classes/CMSContentInfo.html#/s:7OpenSSL14CMSContentInfoC5final4datay10Foundation4DataV_tKF":{"name":"final(data:)","abstract":"<p>Final step for the <code>encryptPartial</code>, <code>addRecipients</code>, <code>final</code> (as in <code>init</code>, <code>update</code>, <code>final</code>) cycle.</p>","parent_name":"CMSContentInfo"},"Classes/CMSContentInfo.html":{"name":"CMSContentInfo","abstract":"<p>CMSContentInfo</p>"},"Classes/OCSPResponse.html":{"name":"OCSPResponse","abstract":"<p>OCSP Response</p>"},"Classes/X509.html":{"name":"X509","abstract":"<p>X509 certificate</p>"},"Classes/OpenSSLECGroup.html":{"name":"OpenSSLECGroup","abstract":"<p>Elliptic-Curve information in accordance with OpenSSL</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}